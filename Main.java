package com.company;

import java.util.Scanner;
public class Main {

    public static void main(String[] args) {
        int n, i, j, p, y, z, q,w;
        int[][] a; // Двумерный массив сетки (сетка с буквами)
        int[] b;// Массив слова
        char x;
        Scanner in = new Scanner(System.in);

        System.out.println("-------------------------------------");
        System.out.print("Введите размерность сетки (n*n): ");
        n = in.nextInt();// Вводим размернсть сетки n*n
        a = new int[n][n];// Создаём сетку

        System.out.print("Введите элементы сетки: ");
        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {

                x = in.next(".").charAt(0);// Вводим символьный элементы сетки
                y = x;// Преобразуем их в числа по таблице "ascii" (chat > int)
                a[i][j] = y;// Заполняем этими числами сетку
            }
        }

        System.out.print("Введите размерность слова(1<p<=n): ");
        p = in.nextInt();// Вводим размерность слова
        b = new int[p];// Создаём массив слова
        System.out.print("Введите слово (через пробелы): ");
        for (i = 0; i < p; i++) {
            x = in.next(".").charAt(0);// Вводим буквы слова
            y = x;// Преобразуем их в числа по таблице "ascii" (chat > int)
            b[i] = y;// Заполняем этими числами массив слова
        }

        System.out.println("_____________________________________");
        System.out.println("|Сетка символов|");
        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                System.out.print(" " + (char) a[i][j]);// Графически строим сетку символов
            }
            System.out.println();
        }
        System.out.println();
        System.out.println("|Слово|");
        for (i = 0; i < p; i++) {
            System.out.print((char) b[i]);// Графически выводим слово
        }
        System.out.println();
        System.out.println("-------------------------------------");
        w = 1; // Счётчик
        z = 0; // Счётчик
        q = 1; // Счётчик
        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                if (a[i][j] == b[0]) {// Ищем в сетке первую букву слова

                    if (i != 0) {// Проверка для индекса массива
                        if (a[i - 1][j] == b[1]) {// Проверка( если вторая буква лежит сверху)
                            z = 8;// Условное обозначение направления (того что слово лежит снизу вверх)
                            print(i,j);// Функция выводит координаты первой буквы слова
                            System.out.print(" ");
                            oops(i, j, a, b, z, q,w);// Функция по поиску и по выводу координат букв слова
                                                     // найденных в сетке
                        }
                    }

                    if (i < (n - 1)) {// Проверка для индекса массива
                        if (a[i + 1][j] == b[1]) {// Проверка( если вторая буква лежит снизу)
                            z = 2;// Условное обозначение направления (того что слово лежит сверху вниз)
                            print(i,j);
                            System.out.print(" ");
                            oops(i, j, a, b, z, q,w);
                        }
                    }

                    if (j < (n - 1)) {// Проверка для индекса массива
                        if (a[i][j + 1] == b[1]) {// Проверка( если вторая буква лежит справа)
                            z = 6;// Условное обозначение направления (того что слово лежит слева направо)
                            print(i,j);
                            System.out.print(" ");
                            oops(i, j, a, b, z, q,w);
                        }
                    }

                    if (j != 0) {// Проверка для индекса массива
                        if (a[i][j - 1] == b[1]) {// Проверка( если вторая буква лежит слева)
                            z = 4;// Условное обозначение направления (того что слово лежит справа налево)
                            print(i,j);
                            System.out.print(" ");
                            oops(i, j, a, b, z, q,w);
                        }
                    }

                    if ((i != 0) & (j != 0)) {// Проверка для индекса массива
                        if (a[i - 1][j - 1] == b[1]) {// Проверка( если вторая буква лежит сверху слева)
                            z = 7;// Условное обозначение направления (того что слово лежит по диагонале)
                            print(i,j);
                            System.out.print(" ");
                            oops(i, j, a, b, z, q,w);
                        }
                    }

                    if ((i < (n - 1)) & (j < (n - 1))) {// Проверка для индекса массива
                        if (a[i + 1][j + 1] == b[1]) {// Проверка( если вторая буква лежит внизу справа)
                            z = 3;// Условное обозначение направления (того что слово лежит по диагонале)
                            print(i,j);
                            System.out.print(" ");
                            oops(i, j, a, b, z, q,w);
                        }
                    }

                    if ((i < (n - 1)) & (j != 0)) {// Проверка для индекса массива
                        if (a[i + 1][j - 1] == b[1]) {// Проверка( если вторая буква лежит внизу слева)
                            z = 1;// Условное обозначение направления (того что слово лежит по диагонале)
                            print(i,j);
                            System.out.print(" ");
                            oops(i, j, a, b, z, q,w);
                        }
                    }

                    if ((i != 0) & (j < (n - 1))) {// Проверка для индекса массива
                        if (a[i - 1][j + 1] == b[1]) {// Проверка( если вторая буква лежит сверху спарва)
                            z = 9;// Условное обозначение направления (того что слово лежит по диагонале)
                            print(i,j);
                            System.out.print(" ");
                            oops(i, j, a, b, z, q,w);
                        }
                    }
                    System.out.println();
                }
            }
        }
    }

    public static void print(int i,int j) {// Функция выводит координаты первой буквы слова( в сетке)
        System.out.print("| (" + i + "|" + j + ")");
    }

    public static void oops(int i, int j, int a[][], int b[], int z, int q,int w) {
        // Функция по поиску и выводу координат букв слова
        // найденных в сетке

        if (z == 8) {// Если направление слова (снизу вверх)
            if (i != 0) {// Проверка для индекса массива
                if (a[i - 1][j] == b[q]) {//Если буква слова есть сверху
                    System.out.print("(" + (i - 1) + "|" + j + ") ");//Выводим координаты этой буквы
                    if(w == (b.length-1)){// Если все буквы найдены
                        System.out.print("|- Лежит(снизу вверх)  ");
                    }
                    w=w+1;//Счётчик букв
                    i = i - 1;// "Шаг" в сетке
                    if ((q + 1) < b.length) {
                        q = q + 1;// "Шаг" следующей буквы в слове
                    }
                    oops(i, j, a, b, z, q,w);// Рекурсивно запускаем
                }

            }
        }
        if (z == 2) {// Если направление слова (сверху вниз)
            if (i < ((a.length) - 1)) {// Проверка для индекса массива
                if (a[i + 1][j] == b[q]) {//Если буква слова есть снизу
                    System.out.print("(" + (i + 1) + "|" + j + ") ");//Выводим координаты этой буквы
                    if(w == (b.length-1)){
                        System.out.print("|- Лежит(сверху вниз)  ");
                    }
                    w=w+1;
                    i = i + 1;// "Шаг" в сетке
                    if ((q + 1) < b.length) {
                        q = q + 1;
                    }
                    oops(i, j, a, b, z, q,w);
                }
            }
        }
        if (z == 6) {// Если направление слова (слева направо)
            if (j < ((a.length) - 1)) {// Проверка для индекса массива
                if (a[i][j + 1] == b[q]) {//Если буква слова есть справа
                    System.out.print("(" + i + "|" + (j + 1) + ") ");//Выводим координаты этой буквы
                    if(w == (b.length-1)){
                        System.out.print("|- Лежит(слева направо)  ");
                    }
                    w=w+1;
                    j = j + 1;// "Шаг" в сетке
                    if ((q + 1) < b.length) {
                        q = q + 1;
                    }
                    oops(i, j, a, b, z, q,w);
                }
            }
        }
        if (z == 4) {// Если направление слова (справа налево)
            if (j != 0) {// Проверка для индекса массива
                if (a[i][j - 1] == b[q]) {//Если буква слова есть слева
                    System.out.print("(" + i + "|" + (j - 1) + ") ");//Выводим координаты этой буквы
                    if(w == (b.length-1)){
                        System.out.print("|- Лежит(справа налево)  ");//Выводим координаты этой буквы
                    }
                    w=w+1;
                    j = j - 1;// "Шаг" в сетке
                    if ((q + 1) < b.length) {
                        q = q + 1;
                    }
                    oops(i, j, a, b, z, q,w);
                }
            }
        }
        if (z == 7) {// Если направление слова (диагональ)
            if ((i != 0) & (j != 0)) {// Проверка для индекса массива
                if (a[i - 1][j - 1] == b[q]) {//Если буква слова есть сверху слева
                    System.out.print("(" + (i - 1) + "|" + (j - 1) + ") ");
                    if(w == (b.length-1)){
                        System.out.print("|- Лежит(диагональ)  ");//Выводим координаты этой буквы
                    }
                    i = i - 1;// "Шаг" в сетке
                    j = j - 1;// "Шаг" в сетке
                    w=w+1;
                    if ((q + 1) < b.length) {
                        q = q + 1;
                    }
                    oops(i, j, a, b, z, q,w);
                }
            }
        }
        if (z == 3) {// Если направление слова (диагональ)
            if ((i < ((a.length) - 1)) & (j < ((a.length) - 1))) {// Проверка для индекса массива
                if (a[i + 1][j + 1] == b[q]) {////Если буква слова есть внизу справа
                    System.out.print("(" + (i + 1) + "|" + (j + 1) + ") ");
                    if(w == (b.length-1)){
                        System.out.print("|- Лежит(диагональ)  ");//Выводим координаты этой буквы
                    }
                    w=w+1;
                    i = i + 1;// "Шаг" в сетке
                    j = j + 1;// "Шаг" в сетке
                    if ((q + 1) < b.length) {
                        q = q + 1;
                    }
                    oops(i, j, a, b, z, q,w);
                }
            }
        }
        if (z == 1) {// Если направление слова (диагональ)
            if ((i < ((a.length) - 1)) & (j != 0)) {// Проверка для индекса массива
                if (a[i + 1][j - 1] == b[q]) {//Если буква слова есть внизу слева
                    System.out.print("(" + (i + 1) + "|" + (j - 1) + ") ");//Выводим координаты этой буквы
                    if(w == (b.length-1)){
                        System.out.print("|- Лежит(диагональ)  ");
                    }
                    w=w+1;
                    i = i + 1;// "Шаг" в сетке
                    j = j - 1;// "Шаг" в сетке
                    if ((q + 1) < b.length) {
                        q = q + 1;
                    }
                    oops(i, j, a, b, z, q,w);
                }
            }
        }
        if (z == 9) {// Если направление слова (диагональ)
            if ((i != 0) & (j < ((a.length) - 1))) {// Проверка для индекса массива
                if (a[i - 1][j + 1] == b[q]) {//Если буква слова есть сверху спарва
                    System.out.print("(" + (i - 1) + "|" + (j + 1) + ") ");//Выводим координаты этой буквы
                    if(w == (b.length-1)){
                        System.out.print("|- Лежит(диагональ)  ");
                    }
                    w=w+1;
                    i = i - 1;// "Шаг" в сетке
                    j = j + 1;// "Шаг" в сетке
                    if ((q + 1) < b.length) {
                        q = q + 1;
                    }
                    oops(i, j, a, b, z, q,w);
                }
            }
        }
    }
}